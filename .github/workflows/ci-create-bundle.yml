# ./workflows/ci-create-bundle.yml
name: Bundle CI

on:
  workflow_call:

jobs:
  bundle:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js, cache, and install dependencies
        timeout-minutes: 5
        uses: ./.github/actions/setup-node-project

      ### Install "compiler"
      - name: Install ncc
        run: npm i -g @vercel/ncc

      ### Try to bundle & commit dist package.

      - name: Bundle
        run: npm run package

      - name: Check for git changes
        id: check_changes
        run: |
          git add dist/index.js
          if git diff --staged --quiet; then
            echo 'No changes found in source files' >&2
            echo 'changes_exist=false' >> $GITHUB_OUTPUT
          else
            echo 'changes_exist=true' >> $GITHUB_OUTPUT
          fi
          #####

      - name: Determine branch name
        id: determine_branch
        if: ${{ steps.check_changes.outputs.changes_exist == 'true' }}
        run: |
          if [ "${{ github.event_name }}" == 'pull_request' ]; then
            echo "branch_name=${{ github.head_ref }}"
            echo "branch_name=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          else
            echo "branch_name=$(basename $GITHUB_REF)"
            echo "branch_name=$(basename $GITHUB_REF)" >> $GITHUB_OUTPUT
          fi
          #####

      - name: Setup GPG for signing
        if: ${{ steps.check_changes.outputs.changes_exist == 'true' }}
        uses: ./.github/actions/git-gpg-setup
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

      - name: Commit changes
        if: ${{ steps.check_changes.outputs.changes_exist == 'true' }}
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GIT_COMMITTER_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_AUTHOR_NAME: ${{ vars.BOT_NAME }}
          GIT_AUTHOR_EMAIL: ${{ vars.BOT_EMAIL }}
        run: |
          git commit -m "[${{ env.GIT_AUTHOR_NAME }}] Update dist/index.js"
          echo 'Changes committed'

      - name: Verify commit signature
        if: ${{ steps.check_changes.outputs.changes_exist == 'true' }}
        run: |
          commit_hash=$(git rev-parse HEAD)
          git verify-commit "$commit_hash"
          echo 'Commit signature verified'

      - name: Push changes
        if: ${{ steps.check_changes.outputs.changes_exist == 'true' }}
        run: |
          git push origin HEAD:${{ steps.determine_branch.outputs.branch_name }} --force
          echo 'Changes successfully pushed'

      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: dist
          path: dist/
        continue-on-error: true
