name: Bundle CI

on:
  workflow_call:

jobs:
  bundle:
    runs-on: ubuntu-latest

    env:
      BOT_NAME: ${{ vars.BOT_NAME }}
      BOT_EMAIL: ${{ vars.BOT_EMAIL }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # Checkout the repository to access its content.
      - uses: actions/checkout@v4

      # Setup Node.js environment on the runner to match the node version used in development.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      # Cache node_modules based on hash of package.json and package-lock.json to speed up installations.
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ hashFiles('package.json') }}-

      - name: Restore dependencies
        run: npm ci

      - name: Install ncc
        run: npm i -g @vercel/ncc

      - name: Print current branch
        if: ${{ runner.debug == '1' }}
        run: echo $GITHUB_REF


      ### Try to bundle & commit dist package.

      - name: Bundle
        run: npm run package

      - name: Check for git changes
        id: check_changes
        run: |
          git add dist/index.js
          if git diff --staged --quiet; then
            echo "changes_exist=false"
            echo "changes_exist=false" >> $GITHUB_OUTPUT
          else
            echo "changes_exist=true"
            echo "changes_exist=true" >> $GITHUB_OUTPUT
          fi

      - name: Determine branch name
        id: determine_branch
        if: ${{ steps.check_changes.outputs.changes_exist == 'true' }}
        run: |
          if [ "${{ github.event_name }}" == 'pull_request' ]; then
            echo "branch_name=${{ github.head_ref }}"
            echo "branch_name=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          else
            echo "branch_name=$(basename $GITHUB_REF)"
            echo "branch_name=$(basename $GITHUB_REF)" >> $GITHUB_OUTPUT
          fi

      - name: Setup GPG for signing
        if: ${{ steps.check_changes.outputs.changes_exist == 'true' }}
        uses: ./.github/actions/git-gpg-setup
        with:
          name: ${{ env.BOT_NAME }}
          email: ${{ env.BOT_EMAIL }}
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

      - name: Commit updated version
        if: ${{ steps.check_changes.outputs.changes_exist == 'true' }}
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GIT_COMMITTER_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_AUTHOR_NAME: ${{ env.BOT_NAME }}
          GIT_AUTHOR_EMAIL: ${{ env.BOT_EMAIL }}
        run: |
          git commit -m "[${{ env.BOT_NAME }}] Update dist/index.js"
          git verify-commit $( git rev-parse HEAD )
          git push origin HEAD:${{ steps.determine_branch.outputs.branch_name }} --force

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
        continue-on-error: true
